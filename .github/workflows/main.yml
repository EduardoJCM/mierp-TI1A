name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Cambia 'main' por la rama que usas para producción, como 'master' o cualquier otra.
  pull_request:
    branches:
      - main  # Cambia 'main' por la rama que usas para producción

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'  # Puedes especificar la versión de Python que usas

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Instala las dependencias de tu proyecto

      - name: Run tests
        run: |
          python manage.py test  # Ejecuta las pruebas de tu proyecto

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Esto significa que el job 'deploy' solo se ejecuta después de que 'build' haya sido exitoso
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key for deployment
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa  # Asegura que la clave SSH tenga permisos adecuados

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no user@server_ip << 'EOF'  # Conéctate al servidor vía SSH
            cd /path/to/your/project
            git pull origin main  # Trae los últimos cambios desde la rama 'main'
            source venv/bin/activate  # Si usas un entorno virtual
            pip install -r requirements.txt  # Instala las dependencias
            python manage.py migrate  # Aplica las migraciones de base de datos
            python manage.py collectstatic --noinput  # Recopila archivos estáticos
            sudo systemctl restart gunicorn  # Reinicia el servidor Gunicorn (o el servidor que uses)
          EOF
